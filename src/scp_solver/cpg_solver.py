
"""
Auto-generated by CVXPYgen on May 05, 2025 at 01:36:10.
Content: Custom solve method for CVXPY interface.
"""

import time
import warnings
import numpy as np
from cvxpy.reductions import Solution
from cvxpy.problems.problem import SolverStats
from scp_solver import cpg_module


standard_settings_names = {}


def squeeze_scalar(val):
    if isinstance(val, np.ndarray):
        val = val.squeeze()
        if val.shape == ():
            return val.item()
    return val


def cpg_solve(prob, updated_params=None, **kwargs):

    # set flags for updated parameters
    upd = cpg_module.cpg_updated()
    if updated_params is None:
        updated_params = ["param7", "param15", "param17", "param8", "param16", "param18", "param9", "param10", "param11", "param12", "param13", "param14"]
    for p in updated_params:
        try:
            setattr(upd, p, True)
        except AttributeError:
            raise AttributeError(f"{p} is not a parameter.")

    # set solver settings
    cpg_module.set_solver_default_settings()
    for key, value in kwargs.items():
        try:
            eval(f'cpg_module.set_solver_{standard_settings_names.get(key, key)}(value)')
        except AttributeError:
            raise AttributeError(f'Solver setting "{key}" not available.')

    # set parameter values
    par = cpg_module.cpg_params()
    param_dict = prob.param_dict
    par.param7 = list(param_dict["param7"].value.flatten(order="F"))
    par.param15 = squeeze_scalar(param_dict["param15"].value)
    par.param17 = squeeze_scalar(param_dict["param17"].value)
    par.param8 = list(param_dict["param8"].value.flatten(order="F"))
    par.param16 = squeeze_scalar(param_dict["param16"].value)
    par.param18 = squeeze_scalar(param_dict["param18"].value)
    par.param9 = squeeze_scalar(param_dict["param9"].value)
    par.param10 = list(param_dict["param10"].value.flatten(order="F"))
    par.param11 = list(param_dict["param11"].value.flatten(order="F"))
    par.param12 = list(param_dict["param12"].value.flatten(order="F"))
    par.param13 = list(param_dict["param13"].value.flatten(order="F"))
    par.param14 = list(param_dict["param14"].value.flatten(order="F"))

    # solve
    t0 = time.time()
    res = cpg_module.solve(upd, par)
    t1 = time.time()

    # store solution in problem object
    prob._clear_solution()
    prob.var_dict['var3'].save_value(np.array(res.cpg_prim.var3))
    prob.var_dict['var4'].save_value(np.array(res.cpg_prim.var4).reshape((14, 34), order='F'))
    prob.var_dict['var5'].save_value(np.array(res.cpg_prim.var5).reshape((35, 1), order='F'))
    prob.var_dict['var6'].save_value(np.array(res.cpg_prim.var6))
    prob.var_dict['var1'].save_value(np.array(res.cpg_prim.var1).reshape((14, 35), order='F'))
    prob.var_dict['var2'].save_value(np.array(res.cpg_prim.var2).reshape((3, 35), order='F'))
    prob.constraints[0].save_dual_value(np.array(res.cpg_dual.d0).reshape(35))
    prob.constraints[1].save_dual_value(np.array(res.cpg_dual.d1))
    prob.constraints[2].save_dual_value(np.array(res.cpg_dual.d2).reshape(3))
    prob.constraints[3].save_dual_value(np.array(res.cpg_dual.d3).reshape(3))
    prob.constraints[4].save_dual_value(np.array(res.cpg_dual.d4).reshape(3))
    prob.constraints[5].save_dual_value(np.array(res.cpg_dual.d5).reshape(13))
    prob.constraints[6].save_dual_value(np.array(res.cpg_dual.d6))
    prob.constraints[7].save_dual_value(np.array(res.cpg_dual.d7))
    prob.constraints[8].save_dual_value(np.array(res.cpg_dual.d8))
    prob.constraints[9].save_dual_value(np.array(res.cpg_dual.d9).reshape((1, 1), order='F'))
    prob.constraints[10].save_dual_value(np.array(res.cpg_dual.d10).reshape(1))
    prob.constraints[11].save_dual_value(np.array(res.cpg_dual.d11).reshape(1))
    prob.constraints[12].save_dual_value(np.array(res.cpg_dual.d12))
    prob.constraints[13].save_dual_value(np.array(res.cpg_dual.d13))
    prob.constraints[14].save_dual_value(np.array(res.cpg_dual.d14))
    prob.constraints[15].save_dual_value(np.array(res.cpg_dual.d15))
    prob.constraints[16].save_dual_value(np.array(res.cpg_dual.d16))
    prob.constraints[17].save_dual_value(np.array(res.cpg_dual.d17).reshape((1, 1), order='F'))
    prob.constraints[18].save_dual_value(np.array(res.cpg_dual.d18).reshape(1))
    prob.constraints[19].save_dual_value(np.array(res.cpg_dual.d19).reshape(1))
    prob.constraints[20].save_dual_value(np.array(res.cpg_dual.d20))
    prob.constraints[21].save_dual_value(np.array(res.cpg_dual.d21))
    prob.constraints[22].save_dual_value(np.array(res.cpg_dual.d22))
    prob.constraints[23].save_dual_value(np.array(res.cpg_dual.d23))
    prob.constraints[24].save_dual_value(np.array(res.cpg_dual.d24))
    prob.constraints[25].save_dual_value(np.array(res.cpg_dual.d25).reshape((1, 1), order='F'))
    prob.constraints[26].save_dual_value(np.array(res.cpg_dual.d26).reshape(1))
    prob.constraints[27].save_dual_value(np.array(res.cpg_dual.d27).reshape(1))
    prob.constraints[28].save_dual_value(np.array(res.cpg_dual.d28))
    prob.constraints[29].save_dual_value(np.array(res.cpg_dual.d29))
    prob.constraints[30].save_dual_value(np.array(res.cpg_dual.d30))
    prob.constraints[31].save_dual_value(np.array(res.cpg_dual.d31))
    prob.constraints[32].save_dual_value(np.array(res.cpg_dual.d32))
    prob.constraints[33].save_dual_value(np.array(res.cpg_dual.d33).reshape((1, 1), order='F'))
    prob.constraints[34].save_dual_value(np.array(res.cpg_dual.d34).reshape(1))
    prob.constraints[35].save_dual_value(np.array(res.cpg_dual.d35).reshape(1))
    prob.constraints[36].save_dual_value(np.array(res.cpg_dual.d36))
    prob.constraints[37].save_dual_value(np.array(res.cpg_dual.d37))
    prob.constraints[38].save_dual_value(np.array(res.cpg_dual.d38))
    prob.constraints[39].save_dual_value(np.array(res.cpg_dual.d39))
    prob.constraints[40].save_dual_value(np.array(res.cpg_dual.d40))
    prob.constraints[41].save_dual_value(np.array(res.cpg_dual.d41).reshape((1, 1), order='F'))
    prob.constraints[42].save_dual_value(np.array(res.cpg_dual.d42).reshape(1))
    prob.constraints[43].save_dual_value(np.array(res.cpg_dual.d43).reshape(1))
    prob.constraints[44].save_dual_value(np.array(res.cpg_dual.d44))
    prob.constraints[45].save_dual_value(np.array(res.cpg_dual.d45))
    prob.constraints[46].save_dual_value(np.array(res.cpg_dual.d46))
    prob.constraints[47].save_dual_value(np.array(res.cpg_dual.d47))
    prob.constraints[48].save_dual_value(np.array(res.cpg_dual.d48))
    prob.constraints[49].save_dual_value(np.array(res.cpg_dual.d49).reshape((1, 1), order='F'))
    prob.constraints[50].save_dual_value(np.array(res.cpg_dual.d50).reshape(1))
    prob.constraints[51].save_dual_value(np.array(res.cpg_dual.d51).reshape(1))
    prob.constraints[52].save_dual_value(np.array(res.cpg_dual.d52))
    prob.constraints[53].save_dual_value(np.array(res.cpg_dual.d53))
    prob.constraints[54].save_dual_value(np.array(res.cpg_dual.d54))
    prob.constraints[55].save_dual_value(np.array(res.cpg_dual.d55))
    prob.constraints[56].save_dual_value(np.array(res.cpg_dual.d56))
    prob.constraints[57].save_dual_value(np.array(res.cpg_dual.d57).reshape((1, 1), order='F'))
    prob.constraints[58].save_dual_value(np.array(res.cpg_dual.d58).reshape(1))
    prob.constraints[59].save_dual_value(np.array(res.cpg_dual.d59).reshape(1))
    prob.constraints[60].save_dual_value(np.array(res.cpg_dual.d60))
    prob.constraints[61].save_dual_value(np.array(res.cpg_dual.d61))
    prob.constraints[62].save_dual_value(np.array(res.cpg_dual.d62))
    prob.constraints[63].save_dual_value(np.array(res.cpg_dual.d63))
    prob.constraints[64].save_dual_value(np.array(res.cpg_dual.d64))
    prob.constraints[65].save_dual_value(np.array(res.cpg_dual.d65).reshape((1, 1), order='F'))
    prob.constraints[66].save_dual_value(np.array(res.cpg_dual.d66).reshape(1))
    prob.constraints[67].save_dual_value(np.array(res.cpg_dual.d67).reshape(1))
    prob.constraints[68].save_dual_value(np.array(res.cpg_dual.d68))
    prob.constraints[69].save_dual_value(np.array(res.cpg_dual.d69))
    prob.constraints[70].save_dual_value(np.array(res.cpg_dual.d70))
    prob.constraints[71].save_dual_value(np.array(res.cpg_dual.d71))
    prob.constraints[72].save_dual_value(np.array(res.cpg_dual.d72))
    prob.constraints[73].save_dual_value(np.array(res.cpg_dual.d73).reshape((1, 1), order='F'))
    prob.constraints[74].save_dual_value(np.array(res.cpg_dual.d74).reshape(1))
    prob.constraints[75].save_dual_value(np.array(res.cpg_dual.d75).reshape(1))
    prob.constraints[76].save_dual_value(np.array(res.cpg_dual.d76))
    prob.constraints[77].save_dual_value(np.array(res.cpg_dual.d77))
    prob.constraints[78].save_dual_value(np.array(res.cpg_dual.d78))
    prob.constraints[79].save_dual_value(np.array(res.cpg_dual.d79))
    prob.constraints[80].save_dual_value(np.array(res.cpg_dual.d80))
    prob.constraints[81].save_dual_value(np.array(res.cpg_dual.d81).reshape((1, 1), order='F'))
    prob.constraints[82].save_dual_value(np.array(res.cpg_dual.d82).reshape(1))
    prob.constraints[83].save_dual_value(np.array(res.cpg_dual.d83).reshape(1))
    prob.constraints[84].save_dual_value(np.array(res.cpg_dual.d84))
    prob.constraints[85].save_dual_value(np.array(res.cpg_dual.d85))
    prob.constraints[86].save_dual_value(np.array(res.cpg_dual.d86))
    prob.constraints[87].save_dual_value(np.array(res.cpg_dual.d87))
    prob.constraints[88].save_dual_value(np.array(res.cpg_dual.d88))
    prob.constraints[89].save_dual_value(np.array(res.cpg_dual.d89).reshape((1, 1), order='F'))
    prob.constraints[90].save_dual_value(np.array(res.cpg_dual.d90).reshape(1))
    prob.constraints[91].save_dual_value(np.array(res.cpg_dual.d91).reshape(1))
    prob.constraints[92].save_dual_value(np.array(res.cpg_dual.d92))
    prob.constraints[93].save_dual_value(np.array(res.cpg_dual.d93))
    prob.constraints[94].save_dual_value(np.array(res.cpg_dual.d94))
    prob.constraints[95].save_dual_value(np.array(res.cpg_dual.d95))
    prob.constraints[96].save_dual_value(np.array(res.cpg_dual.d96))
    prob.constraints[97].save_dual_value(np.array(res.cpg_dual.d97).reshape((1, 1), order='F'))
    prob.constraints[98].save_dual_value(np.array(res.cpg_dual.d98).reshape(1))
    prob.constraints[99].save_dual_value(np.array(res.cpg_dual.d99).reshape(1))
    prob.constraints[100].save_dual_value(np.array(res.cpg_dual.d100))
    prob.constraints[101].save_dual_value(np.array(res.cpg_dual.d101))
    prob.constraints[102].save_dual_value(np.array(res.cpg_dual.d102))
    prob.constraints[103].save_dual_value(np.array(res.cpg_dual.d103))
    prob.constraints[104].save_dual_value(np.array(res.cpg_dual.d104))
    prob.constraints[105].save_dual_value(np.array(res.cpg_dual.d105).reshape((1, 1), order='F'))
    prob.constraints[106].save_dual_value(np.array(res.cpg_dual.d106).reshape(1))
    prob.constraints[107].save_dual_value(np.array(res.cpg_dual.d107).reshape(1))
    prob.constraints[108].save_dual_value(np.array(res.cpg_dual.d108))
    prob.constraints[109].save_dual_value(np.array(res.cpg_dual.d109))
    prob.constraints[110].save_dual_value(np.array(res.cpg_dual.d110))
    prob.constraints[111].save_dual_value(np.array(res.cpg_dual.d111))
    prob.constraints[112].save_dual_value(np.array(res.cpg_dual.d112))
    prob.constraints[113].save_dual_value(np.array(res.cpg_dual.d113).reshape((1, 1), order='F'))
    prob.constraints[114].save_dual_value(np.array(res.cpg_dual.d114).reshape(1))
    prob.constraints[115].save_dual_value(np.array(res.cpg_dual.d115).reshape(1))
    prob.constraints[116].save_dual_value(np.array(res.cpg_dual.d116))
    prob.constraints[117].save_dual_value(np.array(res.cpg_dual.d117))
    prob.constraints[118].save_dual_value(np.array(res.cpg_dual.d118))
    prob.constraints[119].save_dual_value(np.array(res.cpg_dual.d119))
    prob.constraints[120].save_dual_value(np.array(res.cpg_dual.d120))
    prob.constraints[121].save_dual_value(np.array(res.cpg_dual.d121).reshape((1, 1), order='F'))
    prob.constraints[122].save_dual_value(np.array(res.cpg_dual.d122).reshape(1))
    prob.constraints[123].save_dual_value(np.array(res.cpg_dual.d123).reshape(1))
    prob.constraints[124].save_dual_value(np.array(res.cpg_dual.d124))
    prob.constraints[125].save_dual_value(np.array(res.cpg_dual.d125))
    prob.constraints[126].save_dual_value(np.array(res.cpg_dual.d126))
    prob.constraints[127].save_dual_value(np.array(res.cpg_dual.d127))
    prob.constraints[128].save_dual_value(np.array(res.cpg_dual.d128))
    prob.constraints[129].save_dual_value(np.array(res.cpg_dual.d129).reshape((1, 1), order='F'))
    prob.constraints[130].save_dual_value(np.array(res.cpg_dual.d130).reshape(1))
    prob.constraints[131].save_dual_value(np.array(res.cpg_dual.d131).reshape(1))
    prob.constraints[132].save_dual_value(np.array(res.cpg_dual.d132))
    prob.constraints[133].save_dual_value(np.array(res.cpg_dual.d133))
    prob.constraints[134].save_dual_value(np.array(res.cpg_dual.d134))
    prob.constraints[135].save_dual_value(np.array(res.cpg_dual.d135))
    prob.constraints[136].save_dual_value(np.array(res.cpg_dual.d136))
    prob.constraints[137].save_dual_value(np.array(res.cpg_dual.d137).reshape((1, 1), order='F'))
    prob.constraints[138].save_dual_value(np.array(res.cpg_dual.d138).reshape(1))
    prob.constraints[139].save_dual_value(np.array(res.cpg_dual.d139).reshape(1))
    prob.constraints[140].save_dual_value(np.array(res.cpg_dual.d140))
    prob.constraints[141].save_dual_value(np.array(res.cpg_dual.d141))
    prob.constraints[142].save_dual_value(np.array(res.cpg_dual.d142))
    prob.constraints[143].save_dual_value(np.array(res.cpg_dual.d143))
    prob.constraints[144].save_dual_value(np.array(res.cpg_dual.d144))
    prob.constraints[145].save_dual_value(np.array(res.cpg_dual.d145).reshape((1, 1), order='F'))
    prob.constraints[146].save_dual_value(np.array(res.cpg_dual.d146).reshape(1))
    prob.constraints[147].save_dual_value(np.array(res.cpg_dual.d147).reshape(1))
    prob.constraints[148].save_dual_value(np.array(res.cpg_dual.d148))
    prob.constraints[149].save_dual_value(np.array(res.cpg_dual.d149))
    prob.constraints[150].save_dual_value(np.array(res.cpg_dual.d150))
    prob.constraints[151].save_dual_value(np.array(res.cpg_dual.d151))
    prob.constraints[152].save_dual_value(np.array(res.cpg_dual.d152))
    prob.constraints[153].save_dual_value(np.array(res.cpg_dual.d153).reshape((1, 1), order='F'))
    prob.constraints[154].save_dual_value(np.array(res.cpg_dual.d154).reshape(1))
    prob.constraints[155].save_dual_value(np.array(res.cpg_dual.d155).reshape(1))
    prob.constraints[156].save_dual_value(np.array(res.cpg_dual.d156))
    prob.constraints[157].save_dual_value(np.array(res.cpg_dual.d157))
    prob.constraints[158].save_dual_value(np.array(res.cpg_dual.d158))
    prob.constraints[159].save_dual_value(np.array(res.cpg_dual.d159))
    prob.constraints[160].save_dual_value(np.array(res.cpg_dual.d160))
    prob.constraints[161].save_dual_value(np.array(res.cpg_dual.d161).reshape((1, 1), order='F'))
    prob.constraints[162].save_dual_value(np.array(res.cpg_dual.d162).reshape(1))
    prob.constraints[163].save_dual_value(np.array(res.cpg_dual.d163).reshape(1))
    prob.constraints[164].save_dual_value(np.array(res.cpg_dual.d164))
    prob.constraints[165].save_dual_value(np.array(res.cpg_dual.d165))
    prob.constraints[166].save_dual_value(np.array(res.cpg_dual.d166))
    prob.constraints[167].save_dual_value(np.array(res.cpg_dual.d167))
    prob.constraints[168].save_dual_value(np.array(res.cpg_dual.d168))
    prob.constraints[169].save_dual_value(np.array(res.cpg_dual.d169).reshape((1, 1), order='F'))
    prob.constraints[170].save_dual_value(np.array(res.cpg_dual.d170).reshape(1))
    prob.constraints[171].save_dual_value(np.array(res.cpg_dual.d171).reshape(1))
    prob.constraints[172].save_dual_value(np.array(res.cpg_dual.d172))
    prob.constraints[173].save_dual_value(np.array(res.cpg_dual.d173))
    prob.constraints[174].save_dual_value(np.array(res.cpg_dual.d174))
    prob.constraints[175].save_dual_value(np.array(res.cpg_dual.d175))
    prob.constraints[176].save_dual_value(np.array(res.cpg_dual.d176))
    prob.constraints[177].save_dual_value(np.array(res.cpg_dual.d177).reshape((1, 1), order='F'))
    prob.constraints[178].save_dual_value(np.array(res.cpg_dual.d178).reshape(1))
    prob.constraints[179].save_dual_value(np.array(res.cpg_dual.d179).reshape(1))
    prob.constraints[180].save_dual_value(np.array(res.cpg_dual.d180))
    prob.constraints[181].save_dual_value(np.array(res.cpg_dual.d181))
    prob.constraints[182].save_dual_value(np.array(res.cpg_dual.d182))
    prob.constraints[183].save_dual_value(np.array(res.cpg_dual.d183))
    prob.constraints[184].save_dual_value(np.array(res.cpg_dual.d184))
    prob.constraints[185].save_dual_value(np.array(res.cpg_dual.d185).reshape((1, 1), order='F'))
    prob.constraints[186].save_dual_value(np.array(res.cpg_dual.d186).reshape(1))
    prob.constraints[187].save_dual_value(np.array(res.cpg_dual.d187).reshape(1))
    prob.constraints[188].save_dual_value(np.array(res.cpg_dual.d188))
    prob.constraints[189].save_dual_value(np.array(res.cpg_dual.d189))
    prob.constraints[190].save_dual_value(np.array(res.cpg_dual.d190))
    prob.constraints[191].save_dual_value(np.array(res.cpg_dual.d191))
    prob.constraints[192].save_dual_value(np.array(res.cpg_dual.d192))
    prob.constraints[193].save_dual_value(np.array(res.cpg_dual.d193).reshape((1, 1), order='F'))
    prob.constraints[194].save_dual_value(np.array(res.cpg_dual.d194).reshape(1))
    prob.constraints[195].save_dual_value(np.array(res.cpg_dual.d195).reshape(1))
    prob.constraints[196].save_dual_value(np.array(res.cpg_dual.d196))
    prob.constraints[197].save_dual_value(np.array(res.cpg_dual.d197))
    prob.constraints[198].save_dual_value(np.array(res.cpg_dual.d198))
    prob.constraints[199].save_dual_value(np.array(res.cpg_dual.d199))
    prob.constraints[200].save_dual_value(np.array(res.cpg_dual.d200))
    prob.constraints[201].save_dual_value(np.array(res.cpg_dual.d201).reshape((1, 1), order='F'))
    prob.constraints[202].save_dual_value(np.array(res.cpg_dual.d202).reshape(1))
    prob.constraints[203].save_dual_value(np.array(res.cpg_dual.d203).reshape(1))
    prob.constraints[204].save_dual_value(np.array(res.cpg_dual.d204))
    prob.constraints[205].save_dual_value(np.array(res.cpg_dual.d205))
    prob.constraints[206].save_dual_value(np.array(res.cpg_dual.d206))
    prob.constraints[207].save_dual_value(np.array(res.cpg_dual.d207))
    prob.constraints[208].save_dual_value(np.array(res.cpg_dual.d208))
    prob.constraints[209].save_dual_value(np.array(res.cpg_dual.d209).reshape((1, 1), order='F'))
    prob.constraints[210].save_dual_value(np.array(res.cpg_dual.d210).reshape(1))
    prob.constraints[211].save_dual_value(np.array(res.cpg_dual.d211).reshape(1))
    prob.constraints[212].save_dual_value(np.array(res.cpg_dual.d212))
    prob.constraints[213].save_dual_value(np.array(res.cpg_dual.d213))
    prob.constraints[214].save_dual_value(np.array(res.cpg_dual.d214))
    prob.constraints[215].save_dual_value(np.array(res.cpg_dual.d215))
    prob.constraints[216].save_dual_value(np.array(res.cpg_dual.d216))
    prob.constraints[217].save_dual_value(np.array(res.cpg_dual.d217).reshape((1, 1), order='F'))
    prob.constraints[218].save_dual_value(np.array(res.cpg_dual.d218).reshape(1))
    prob.constraints[219].save_dual_value(np.array(res.cpg_dual.d219).reshape(1))
    prob.constraints[220].save_dual_value(np.array(res.cpg_dual.d220))
    prob.constraints[221].save_dual_value(np.array(res.cpg_dual.d221))
    prob.constraints[222].save_dual_value(np.array(res.cpg_dual.d222))
    prob.constraints[223].save_dual_value(np.array(res.cpg_dual.d223))
    prob.constraints[224].save_dual_value(np.array(res.cpg_dual.d224))
    prob.constraints[225].save_dual_value(np.array(res.cpg_dual.d225).reshape((1, 1), order='F'))
    prob.constraints[226].save_dual_value(np.array(res.cpg_dual.d226).reshape(1))
    prob.constraints[227].save_dual_value(np.array(res.cpg_dual.d227).reshape(1))
    prob.constraints[228].save_dual_value(np.array(res.cpg_dual.d228))
    prob.constraints[229].save_dual_value(np.array(res.cpg_dual.d229))
    prob.constraints[230].save_dual_value(np.array(res.cpg_dual.d230))
    prob.constraints[231].save_dual_value(np.array(res.cpg_dual.d231))
    prob.constraints[232].save_dual_value(np.array(res.cpg_dual.d232))
    prob.constraints[233].save_dual_value(np.array(res.cpg_dual.d233).reshape((1, 1), order='F'))
    prob.constraints[234].save_dual_value(np.array(res.cpg_dual.d234).reshape(1))
    prob.constraints[235].save_dual_value(np.array(res.cpg_dual.d235).reshape(1))
    prob.constraints[236].save_dual_value(np.array(res.cpg_dual.d236))
    prob.constraints[237].save_dual_value(np.array(res.cpg_dual.d237))
    prob.constraints[238].save_dual_value(np.array(res.cpg_dual.d238))
    prob.constraints[239].save_dual_value(np.array(res.cpg_dual.d239))
    prob.constraints[240].save_dual_value(np.array(res.cpg_dual.d240))
    prob.constraints[241].save_dual_value(np.array(res.cpg_dual.d241).reshape((1, 1), order='F'))
    prob.constraints[242].save_dual_value(np.array(res.cpg_dual.d242).reshape(1))
    prob.constraints[243].save_dual_value(np.array(res.cpg_dual.d243).reshape(1))
    prob.constraints[244].save_dual_value(np.array(res.cpg_dual.d244))
    prob.constraints[245].save_dual_value(np.array(res.cpg_dual.d245))
    prob.constraints[246].save_dual_value(np.array(res.cpg_dual.d246))
    prob.constraints[247].save_dual_value(np.array(res.cpg_dual.d247))
    prob.constraints[248].save_dual_value(np.array(res.cpg_dual.d248))
    prob.constraints[249].save_dual_value(np.array(res.cpg_dual.d249).reshape((1, 1), order='F'))
    prob.constraints[250].save_dual_value(np.array(res.cpg_dual.d250).reshape(1))
    prob.constraints[251].save_dual_value(np.array(res.cpg_dual.d251).reshape(1))
    prob.constraints[252].save_dual_value(np.array(res.cpg_dual.d252))
    prob.constraints[253].save_dual_value(np.array(res.cpg_dual.d253))
    prob.constraints[254].save_dual_value(np.array(res.cpg_dual.d254))
    prob.constraints[255].save_dual_value(np.array(res.cpg_dual.d255))
    prob.constraints[256].save_dual_value(np.array(res.cpg_dual.d256))
    prob.constraints[257].save_dual_value(np.array(res.cpg_dual.d257).reshape((1, 1), order='F'))
    prob.constraints[258].save_dual_value(np.array(res.cpg_dual.d258).reshape(1))
    prob.constraints[259].save_dual_value(np.array(res.cpg_dual.d259).reshape(1))
    prob.constraints[260].save_dual_value(np.array(res.cpg_dual.d260))
    prob.constraints[261].save_dual_value(np.array(res.cpg_dual.d261))
    prob.constraints[262].save_dual_value(np.array(res.cpg_dual.d262))
    prob.constraints[263].save_dual_value(np.array(res.cpg_dual.d263))
    prob.constraints[264].save_dual_value(np.array(res.cpg_dual.d264))
    prob.constraints[265].save_dual_value(np.array(res.cpg_dual.d265).reshape((1, 1), order='F'))
    prob.constraints[266].save_dual_value(np.array(res.cpg_dual.d266).reshape(1))
    prob.constraints[267].save_dual_value(np.array(res.cpg_dual.d267).reshape(1))
    prob.constraints[268].save_dual_value(np.array(res.cpg_dual.d268))
    prob.constraints[269].save_dual_value(np.array(res.cpg_dual.d269))
    prob.constraints[270].save_dual_value(np.array(res.cpg_dual.d270))
    prob.constraints[271].save_dual_value(np.array(res.cpg_dual.d271))
    prob.constraints[272].save_dual_value(np.array(res.cpg_dual.d272))
    prob.constraints[273].save_dual_value(np.array(res.cpg_dual.d273).reshape((1, 1), order='F'))
    prob.constraints[274].save_dual_value(np.array(res.cpg_dual.d274).reshape(1))
    prob.constraints[275].save_dual_value(np.array(res.cpg_dual.d275).reshape(1))
    prob.constraints[276].save_dual_value(np.array(res.cpg_dual.d276))
    prob.constraints[277].save_dual_value(np.array(res.cpg_dual.d277))
    prob.constraints[278].save_dual_value(np.array(res.cpg_dual.d278))
    prob.constraints[279].save_dual_value(np.array(res.cpg_dual.d279))
    prob.constraints[280].save_dual_value(np.array(res.cpg_dual.d280))
    prob.constraints[281].save_dual_value(np.array(res.cpg_dual.d281).reshape((1, 1), order='F'))
    prob.constraints[282].save_dual_value(np.array(res.cpg_dual.d282).reshape(1))
    prob.constraints[283].save_dual_value(np.array(res.cpg_dual.d283).reshape(1))
    prob.constraints[284].save_dual_value(np.array(res.cpg_dual.d284))
    prob.constraints[285].save_dual_value(np.array(res.cpg_dual.d285))
    prob.constraints[286].save_dual_value(np.array(res.cpg_dual.d286).reshape((14, 1), order='F'))
    prob.constraints[287].save_dual_value(np.array(res.cpg_dual.d287).reshape((14, 1), order='F'))
    prob.constraints[288].save_dual_value(np.array(res.cpg_dual.d288).reshape((14, 1), order='F'))
    prob.constraints[289].save_dual_value(np.array(res.cpg_dual.d289).reshape((14, 1), order='F'))
    prob.constraints[290].save_dual_value(np.array(res.cpg_dual.d290).reshape((14, 1), order='F'))
    prob.constraints[291].save_dual_value(np.array(res.cpg_dual.d291).reshape((14, 1), order='F'))
    prob.constraints[292].save_dual_value(np.array(res.cpg_dual.d292).reshape((14, 1), order='F'))
    prob.constraints[293].save_dual_value(np.array(res.cpg_dual.d293).reshape((14, 1), order='F'))
    prob.constraints[294].save_dual_value(np.array(res.cpg_dual.d294).reshape((14, 1), order='F'))
    prob.constraints[295].save_dual_value(np.array(res.cpg_dual.d295).reshape((14, 1), order='F'))
    prob.constraints[296].save_dual_value(np.array(res.cpg_dual.d296).reshape((14, 1), order='F'))
    prob.constraints[297].save_dual_value(np.array(res.cpg_dual.d297).reshape((14, 1), order='F'))
    prob.constraints[298].save_dual_value(np.array(res.cpg_dual.d298).reshape((14, 1), order='F'))
    prob.constraints[299].save_dual_value(np.array(res.cpg_dual.d299).reshape((14, 1), order='F'))
    prob.constraints[300].save_dual_value(np.array(res.cpg_dual.d300).reshape((14, 1), order='F'))
    prob.constraints[301].save_dual_value(np.array(res.cpg_dual.d301).reshape((14, 1), order='F'))
    prob.constraints[302].save_dual_value(np.array(res.cpg_dual.d302).reshape((14, 1), order='F'))
    prob.constraints[303].save_dual_value(np.array(res.cpg_dual.d303).reshape((14, 1), order='F'))
    prob.constraints[304].save_dual_value(np.array(res.cpg_dual.d304).reshape((14, 1), order='F'))
    prob.constraints[305].save_dual_value(np.array(res.cpg_dual.d305).reshape((14, 1), order='F'))
    prob.constraints[306].save_dual_value(np.array(res.cpg_dual.d306).reshape((14, 1), order='F'))
    prob.constraints[307].save_dual_value(np.array(res.cpg_dual.d307).reshape((14, 1), order='F'))
    prob.constraints[308].save_dual_value(np.array(res.cpg_dual.d308).reshape((14, 1), order='F'))
    prob.constraints[309].save_dual_value(np.array(res.cpg_dual.d309).reshape((14, 1), order='F'))
    prob.constraints[310].save_dual_value(np.array(res.cpg_dual.d310).reshape((14, 1), order='F'))
    prob.constraints[311].save_dual_value(np.array(res.cpg_dual.d311).reshape((14, 1), order='F'))
    prob.constraints[312].save_dual_value(np.array(res.cpg_dual.d312).reshape((14, 1), order='F'))
    prob.constraints[313].save_dual_value(np.array(res.cpg_dual.d313).reshape((14, 1), order='F'))
    prob.constraints[314].save_dual_value(np.array(res.cpg_dual.d314).reshape((14, 1), order='F'))
    prob.constraints[315].save_dual_value(np.array(res.cpg_dual.d315).reshape((14, 1), order='F'))
    prob.constraints[316].save_dual_value(np.array(res.cpg_dual.d316).reshape((14, 1), order='F'))
    prob.constraints[317].save_dual_value(np.array(res.cpg_dual.d317).reshape((14, 1), order='F'))
    prob.constraints[318].save_dual_value(np.array(res.cpg_dual.d318).reshape((14, 1), order='F'))
    prob.constraints[319].save_dual_value(np.array(res.cpg_dual.d319).reshape((14, 1), order='F'))

    # store additional solver information in problem object
    prob._status = "%d (for description visit https://qoco-org.github.io/qoco/)" % res.cpg_info.status
    if abs(res.cpg_info.obj_val) == 1e30:
        prob._value = np.sign(res.cpg_info.obj_val) * np.inf
    else:
        prob._value = res.cpg_info.obj_val
    primal_vars = {var.id: var.value for var in prob.variables()}
    dual_vars = {c.id: c.dual_value for c in prob.constraints}
    solver_specific_stats = {'obj_val': res.cpg_info.obj_val,
                             'status': prob._status,
                             'iter': res.cpg_info.iter,
                             'pri_res': res.cpg_info.pri_res,
                             'dua_res': res.cpg_info.dua_res,
                             'time': res.cpg_info.time}
    attr = {'solve_time': t1 - t0, 'solver_specific_stats': solver_specific_stats, 'num_iters': res.cpg_info.iter}
    prob._solution = Solution(prob.status, prob.value, primal_vars, dual_vars, attr)
    results_dict = {'solver_specific_stats': solver_specific_stats,
                    'num_iters': res.cpg_info.iter,
                    'solve_time': t1 - t0}
    prob._solver_stats = SolverStats.from_dict(results_dict, 'QOCO')

    return prob.value


def cpg_gradient(prob, gradient_sol_primal=None, gradient_sol_dual=None):

    # set gradient primal and dual solutions if provided
    gradient_sol = cpg_module.cpg_gsol()
    if gradient_sol_primal is not None and gradient_sol_dual is not None:
        gradient_sol.primal = list(gradient_sol_primal)
        gradient_sol.dual = list(gradient_sol_dual)
        use_sol = True
    else:
        gradient_sol.primal = [0] * 1564
        gradient_sol.dual = [0] * 3219
        use_sol = False

    # set variable deltas
    vdelta = cpg_module.cpg_vdelta()
    vdelta.var3 = squeeze_scalar(prob.var_dict["var3"].gradient)
    vdelta.var4 = list(prob.var_dict["var4"].gradient.flatten(order="F"))
    vdelta.var5 = list(prob.var_dict["var5"].gradient.flatten(order="F"))
    vdelta.var6 = squeeze_scalar(prob.var_dict["var6"].gradient)
    vdelta.var1 = list(prob.var_dict["var1"].gradient.flatten(order="F"))
    vdelta.var2 = list(prob.var_dict["var2"].gradient.flatten(order="F"))
    pdelta = cpg_module.gradient(vdelta, gradient_sol, use_sol)
    prob.param_dict['param7'].gradient = np.array(pdelta.param7).reshape((14, 35), order='F')
    prob.param_dict['param15'].gradient = np.array(pdelta.param15)
    prob.param_dict['param17'].gradient = np.array(pdelta.param17)
    prob.param_dict['param8'].gradient = np.array(pdelta.param8).reshape((3, 35), order='F')
    prob.param_dict['param16'].gradient = np.array(pdelta.param16)
    prob.param_dict['param18'].gradient = np.array(pdelta.param18)
    prob.param_dict['param9'].gradient = np.array(pdelta.param9)
    prob.param_dict['param10'].gradient = np.array(pdelta.param10).reshape((14, 476), order='F')
    prob.param_dict['param11'].gradient = np.array(pdelta.param11).reshape((14, 102), order='F')
    prob.param_dict['param12'].gradient = np.array(pdelta.param12).reshape((14, 102), order='F')
    prob.param_dict['param13'].gradient = np.array(pdelta.param13).reshape((14, 34), order='F')
    prob.param_dict['param14'].gradient = np.array(pdelta.param14).reshape((14, 34), order='F')


def forward(params, context):

    info = {}
    kwargs = context.solver_args.copy()
    prob = kwargs.pop("problem")
    parameters = prob.parameters()
    for pid, val in zip(context.param_ids, params):
        next(p for p in parameters if p.id == pid).value = val
    updated_params = kwargs.pop("updated_params", None)
    _, info["gradient_primal"], info["gradient_dual"] = cpg_solve_and_gradient_info(prob, updated_params, **kwargs)
    info["prob"] = prob

    vars = prob.variables()
    return [next(v for v in vars if v.id == variable.id).value for variable in context.variables], info


def backward(dvars, context):

    prob = context.info["prob"]
    vars = prob.variables()
    for variable, dv in zip(context.variables, dvars):
        next(v for v in vars if v.id == variable.id).gradient = dv
    gradient_primal = context.info["gradient_primal"]
    gradient_dual = context.info["gradient_dual"]
    cpg_gradient(prob, gradient_primal, gradient_dual)

    params = prob.parameters()
    return [next(p for p in params if p.id == pid).gradient for pid in context.param_ids], {}
